/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package digitaldiary;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import javax.swing.DefaultListModel;

/**
 *
 * @author aks
 */
public class DeleteNote extends javax.swing.JFrame {

    /**
     * Creates new form DeleteNote
     */
    public DeleteNote() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        listNotes = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listEvents = new javax.swing.JList<>();
        btnProcced = new javax.swing.JButton();
        dateLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Select an item to delete");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        listNotes.setModel(new DefaultListModel());
        jScrollPane1.setViewportView(listNotes);

        listEvents.setModel(new DefaultListModel());
        jScrollPane2.setViewportView(listEvents);

        btnProcced.setText("Proceed");
        btnProcced.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProccedActionPerformed(evt);
            }
        });

        dateLbl.setFont(new java.awt.Font("Cantarell", 1, 17)); // NOI18N
        dateLbl.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Selected Date", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), new java.awt.Color(121, 156, 224))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(dateLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(153, 153, 153)
                                .addComponent(btnProcced, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dateLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnProcced)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        DefaultListModel dn=(DefaultListModel)listNotes.getModel();
        DefaultListModel ds=(DefaultListModel)listEvents.getModel();
        
        dateLbl.setText(CalUI.selectedDate+" - "+CalUI.selectedMonth+" - "+CalUI.selectedYear);
        
        try
        {
            if((new File("allNotesLog.dat")).exists())
            {
                BufferedReader br = new BufferedReader(new FileReader("allNotesLog.dat"));
                String s="";
                String date, month, year;
                while((s=br.readLine())!=null)
                {
                    date=s.substring(s.lastIndexOf("@")+1, s.lastIndexOf("-")).trim();
                    month=s.substring(s.lastIndexOf("-")+1, s.lastIndexOf("_")).trim();
                    year=s.substring(s.lastIndexOf("_")+1,s.lastIndexOf(".")).trim();
                    int d=Integer.parseInt(date);
                    int m=Integer.parseInt(month);
                    int y=Integer.parseInt(year);
                    if(d==CalUI.selectedDate && m==CalUI.selectedMonth && y==CalUI.selectedYear)
                        dn.addElement(s);
                }
                br.close();
            }
            if((new File("specialEventsLog.dat")).exists())
            {
                BufferedReader b = new BufferedReader(new FileReader("specialEventsLog.dat"));
                String str="";
                while((str=b.readLine())!=null)
                {
                    String date=str.substring(str.lastIndexOf("#")+1, str.lastIndexOf("*")).trim();
                    String month=str.substring(str.lastIndexOf("*")+1, str.lastIndexOf("~")).trim();
                    String year=str.substring(str.lastIndexOf("~")+1).trim();
                    int d=Integer.parseInt(date);
                    int m=Integer.parseInt(month);
                    int y=Integer.parseInt(year);
                    if(d==CalUI.selectedDate && m==CalUI.selectedMonth && y==CalUI.selectedYear)
                    ds.addElement(str.substring(0,str.lastIndexOf("#")));
                }
                b.close();
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowOpened

    private void btnProccedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProccedActionPerformed
        ArrayList<String> notes=new ArrayList<>();
        ArrayList<String> events=new ArrayList<>();
        ArrayList<String> allNotes=new ArrayList<>();
        ArrayList<String> allEvents=new ArrayList<>();
        try
        {
            notes=(ArrayList<String>) listNotes.getSelectedValuesList();
        }
        catch(Exception e)
        {
            
        }
        try
        {
            events=(ArrayList<String>) listEvents.getSelectedValuesList();
        } 
        catch(Exception e)
        {
            
        }
       BufferedReader br=null;
        try
        {
            br=new BufferedReader(new FileReader("allNotesLog.dat"));
            String s="";
            if((s=br.readLine())!=null)
            {
                allNotes.add(s);
            }
            br.close();
            
            br=new BufferedReader(new FileReader("specialEventsLog.dat"));
            if((s=br.readLine())!=null)
            {
                allEvents.add(s);
            }
            br.close();
            
            BufferedWriter bw=new BufferedWriter(new FileWriter("allNotesLog.dat"));
            for(String i : notes)
            {
                File f=new File(System.getProperty("user.home")+"/Documents/DigitalDiary/"+i);
                if(f.exists())
                    f.delete();
                for(String j: allNotes)
                {
                    if(!(i.equals(j)))
                        bw.append(j+"\n");
                }
            }
            bw.close();
            bw=new BufferedWriter(new FileWriter("specialEventsLog.dat"));
            for(String i : events)
            {
                for(String j: allEvents)
                {
                    if(!(i.equals(j)))
                        bw.append(j+"\n");
                }
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_btnProccedActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeleteNote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeleteNote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeleteNote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleteNote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeleteNote().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProcced;
    private javax.swing.JLabel dateLbl;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList<String> listEvents;
    private javax.swing.JList<String> listNotes;
    // End of variables declaration//GEN-END:variables
}
